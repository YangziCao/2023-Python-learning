'''
面对对象的三大特征
1.封装： 提高程序的安全性
a. 将数据（属性）和行为（方法）包装到类对象中。在方法内部对属性进行操作，在类对象的外部调用方法。这样，无需关心方法内部的具体实现细节，从而隔离了复杂度
b. 在Python中没有专门的修饰符用于属性的私有，如果该属性不希望在类对象外部被访问，前边使用两个 “_”

2.继承： 提高代码的复用性
3.多态： 提高程序的可扩展性和可维护性
'''