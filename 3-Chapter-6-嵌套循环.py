'''
嵌套循环
指循环结构中又嵌套了另外的完整的循环结构，其中内层循环作为外层循环的循环执行体
'''

#输出一个三行四列的矩形
for i in range(1,4):   #行表，执行三次，一次是一行
    for j in range(1,5):
        print('*',end='\t')   #不换行输出，
    print()    #打行
    #外层控制的是行数，内层控制的是打印的个数
'''
输出结果
*	*	*	*	
*	*	*	*	
*	*	*	*
'''

for i in range(1,10):
    for j in range(i):
        print('*',end='\t')
    print()
'''
输出结果
*	
*	*	
*	*	*	
*	*	*	*	
*	*	*	*	*	
*	*	*	*	*	*	
*	*	*	*	*	*	*	
*	*	*	*	*	*	*	*	
*	*	*	*	*	*	*	*	*	
'''

#打印乘法口诀表
for i in range(1,10):
    for j in range(1,i+1):
        print(i,'*',j,'=',i*j,end='\t')
    print()
'''
1 * 1 = 1	
2 * 1 = 2	2 * 2 = 4	
3 * 1 = 3	3 * 2 = 6	3 * 3 = 9	
4 * 1 = 4	4 * 2 = 8	4 * 3 = 12	4 * 4 = 16	
5 * 1 = 5	5 * 2 = 10	5 * 3 = 15	5 * 4 = 20	5 * 5 = 25	
6 * 1 = 6	6 * 2 = 12	6 * 3 = 18	6 * 4 = 24	6 * 5 = 30	6 * 6 = 36	
7 * 1 = 7	7 * 2 = 14	7 * 3 = 21	7 * 4 = 28	7 * 5 = 35	7 * 6 = 42	7 * 7 = 49	
8 * 1 = 8	8 * 2 = 16	8 * 3 = 24	8 * 4 = 32	8 * 5 = 40	8 * 6 = 48	8 * 7 = 56	8 * 8 = 64	
9 * 1 = 9	9 * 2 = 18	9 * 3 = 27	9 * 4 = 36	9 * 5 = 45	9 * 6 = 54	9 * 7 = 63	9 * 8 = 72	9 * 9 = 81	
'''

#二重循环中的break和continue用于控制本层循环
for i in range(5):  #代表外层循环要执行5次, i=0
    for j in  range(1,11):
        if j%2==0:
            break   #会退出里面的循环，从头开始，相当里面的循环白写
        print(j)
'''
1
1
1
1
1
'''

for i in range(5):  #代表外层循环要执行5次, i=0
    for j in  range(1,11):
        if j%2==0:
            continue  #只控制本层循环
        print(j,end='\t')
    print()
'''
1	3	5	7	9	
1	3	5	7	9	
1	3	5	7	9	
1	3	5	7	9	
1	3	5	7	9	
'''