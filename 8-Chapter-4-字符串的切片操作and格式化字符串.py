'''
一.
字符串是不可变类型
不具备增删改等操作
切片操作将产生新的对象
'''

s='hello,Python'
s1=s[:5]  #不写起始位置，默认从0开始，切到5，开区间，到4结束     [start:end:step]
print(s1)
#hello
s2=s[6:] #从6开始，没写结束位置，默认到最后一位
print(s2)
#Python
s3='!'
newstr=s1+s3+s2
print(newstr)
#hello!Python

'''
二.格式化字符串

1. %作占位符
%s 字符串   
%d或者%i 整数
%f      浮点数

2.{}作占位符

3.f-string
'''

#1.
name='张三'
age=20
print('我叫%s,今年%d岁'%(name,age))
# 我叫张三,今年20岁

#2.
print('我叫{0},今年{1}岁'.format(name,age))
#我叫张三,今年20岁

#3.f-string
print(f'我叫{name},今年{age}岁')
#我叫张三,今年20岁

#4. 宽度
print('%d'%99)
#99
print('%10d'%99)
#        99
#表示99前有10个空格/占位符
#10表示的是宽度！！！！！！！！！

#5.精度
print('%f' % 3.141592653)
#3.141593
#保留三位小数点,加个.3 就ok
print('%.3f' % 3.141592653)
#3.142

#6.同时指定宽度和精度
print('%10.3f' % 3.1415926)
#     3.142
#总宽度为10，小数点后三位

#7.
print('{0}'.format(3.14159))
#3.14159
print('{0:.3}'.format(3.14159))
#3.14
#.3表示的是总共三位数
print('{0:.3f}'.format(3.14159))
#3.142
#.3f表示的是小数点后三位
#0代表的是占位符的顺序，也可以省略
print('{0:10.3f}'.format(3.14159))
#     3.142
#同时设置宽度和精度，一共是10位， 3位是小数
